steps:
  - id: "Gerando service-account-storage.json"
    name: "gcr.io/cloud-builders/gcloud"
    args:
      - kms
      - encrypt
      - --ciphertext-file=./storage/credentials/google/service-account-storage.json.enc
      - --plaintext-file=./storage/credentials/google/service-account-storage.json
      - --location=global
      - --keyring=testing-lesson
      - --key=service-account

  - id: "Rodando docker-compose"
    name: "gcr.io/$PROJECT_ID/docker-compose"
    args: ["-f", "docker-compose.prod.yaml", "up", "-d"]
    env:
      - GOOGLE_CLOUD_PROJECT_ID=$PROJECT_ID
      - GOOGLE_CLOUD_KEY_FILE=service-account-storage.json
      - GOOGLE_CLOUD_STORAGE_BUCKET=codeeducation-micro-videos
      - GOOGLE_CLOUD_STORAGE_API_URI=https://storage.cloud.google.com/codeeducation-micro-videos
      - TESTING_PROD=true

  - id: "Chown in /var/www"
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec','-u','root','-t','app','chown','-R','www-data:www-data','/var/www']

  - id: "Rodando composer"
    name: "gcr.io/cloud-builders/docker"
    args: ["exec", "-t", "app", "composer", "install"]

  - id: "Copiando .env"
    name: "gcr.io/cloud-builders/docker"
    args: ["exec", "-t", "app", "cp", ".env.example", ".env"]

  - id: "Copiando .env.testing"
    name: "gcr.io/cloud-builders/docker"
    args: ["exec", "-t", "app", "cp", ".env.testing.example", ".env.testing"]

  - id: "Rodando artisan key:generate"
    name: "gcr.io/cloud-builders/docker"
    args: ["exec", "-t", "app", "php", "/var/www/artisan", "key:generate"]

  - id: "Rodando artisan migrate"
    name: "gcr.io/cloud-builders/docker"
    args: ["exec", "-t", "app", "php", "/var/www/artisan", "migrate"]

  - id: "Rodando PHPUnit"
    name: "gcr.io/cloud-builders/docker"
    args:
      [
        "exec",
        "-t",
        "app",
        "php",
        "/var/www/vendor/bin/phpunit",
        "-c",
        "/var/www/phpunit.xml",
      ]

  - id: "Building image from Dockerfile.prod"
    name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "gcr.io/$PROJECT_ID/app-laravel:$SHORT_SHA",
        "-f",
        "Dockerfile.prod",
        ".",
      ]

  - id: "Pushing image"
    name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/app-laravel:$SHORT_SHA"]

  - id: "Adjusting deployment file - k8s"
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - "-c"
      - |
        sed 's#img-app-deployment#gcr.io/$PROJECT_ID/app-laravel:$SHORT_SHA#g' k8s/app/deployment.yaml > k8s/app/deployment-new.yaml
        cat k8s/app/deployment-new.yaml;

  - id: "Deploying k8s"
    name: "gcr.io/cloud-builders/kubectl"
    args:
      - "apply"
      - "-f"
      - "k8s/app/deployment-new.yaml"
    env:
      - "CLOUDSDK_COMPUTE_ZONE=us-central1-a"
      - "CLOUDSDK_CONTAINER_CLUSTER=cluster-docker-laravel"
